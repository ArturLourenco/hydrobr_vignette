"ggforce",
"scales",
"lubridate",
"tidyverse",
"timeDate",
"leaflet",
"ggpmisc",
"rvest",
"xml2",
"XML",
"padr",
"stringr",
"hydroTSM",
"randtests",
"Kendall",
"trend",
"lfstat",
"geobr"
) # lista de pacotes utilizados
new.packages <-
list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])] # checar se h? algum pacote novo
if (length(new.packages))
install.packages(new.packages) # instala os pacotes novos
lapply(list.of.packages, library, character.only = TRUE) # carrega os pacotes necess?rios
sf_use_s2(FALSE) #TODO
setwd("G:\\My Drive\\R\\Hidroweb_Data_Process\\2022\\") #define a pasta de trabalho
list.of.packages
list.of.packages
library
list.of.packages
class(list.of.packages)
installed.packages()[, "Package"]
new.packages
knitr::opts_chunk$set(echo = TRUE)
gc(TRUE)
rm(list = ls())
dev.off()
cat("\014")
list.of.packages <-
c(
"colorRamps",
"knitr",
"ggplot2",
"zoo",
"RColorBrewer",
"ggrepel",
"sf",
"rgeos",
"ggforce",
"scales",
"lubridate",
"tidyverse",
"timeDate",
"leaflet",
"ggpmisc",
"rvest",
"xml2",
"XML",
"padr",
"stringr",
"hydroTSM",
"randtests",
"Kendall",
"trend",
"lfstat",
"geobr"
) # lista de pacotes utilizados
new.packages <-
list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])] # checar se h? algum pacote novo
if (length(new.packages))
install.packages(new.packages) # instala os pacotes novos
apply(list.of.packages, library, character.only = TRUE) # carrega os pacotes necess?rios
sf_use_s2(FALSE) #TODO
setwd("G:\\My Drive\\R\\Hidroweb_Data_Process\\2022") #define a pasta de trabalho
knitr::include_graphics("visualroteiro.png")
apply(list.of.packages, library, character.only = TRUE)
apply(list.of.packages, library, character.only = TRUE) #
apply(list.of.packages,1, library, character.only = TRUE) #
apply(as.data.frame(list.of.packages), 1, library, character.only = TRUE) #
list.of.packages
apply(as.data.frame(list.of.packages), 1, library) #
list.of.packages <-
c(
"colorRamps",
"knitr",
"ggplot2",
"zoo",
"RColorBrewer",
"ggrepel",
"sf",
"rgeos",
"ggforce",
"scales",
"lubridate",
"tidyverse",
"timeDate",
"leaflet",
"ggpmisc",
"rvest",
"xml2",
"XML",
"padr",
"stringr",
"hydroTSM",
"randtests",
"Kendall",
"trend",
"lfstat",
"geobr"
) # lista de pacotes utilizados
new.packages <-
list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])] # checar se h? algum pacote novo
if (length(new.packages))
install.packages(new.packages) # instala os pacotes novos
lapply(list.of.packages, require, character.only = TRUE) # carrega os pacotes necess?rios
sf_use_s2(FALSE) #TODO
setwd("G:\\My Drive\\R\\Hidroweb_Data_Process\\2022") #define a pasta de trabalho
list.of.packages <-
c(
"colorRamps",
"knitr",
"ggplot2",
"zoo",
"RColorBrewer",
"ggrepel",
"sf",
"rgeos",
"ggforce",
"scales",
"lubridate",
"tidyverse",
"timeDate",
"leaflet",
"ggpmisc",
"rvest",
"xml2",
"XML",
"padr",
"stringr",
"hydroTSM",
"randtests",
"Kendall",
"trend",
"lfstat",
"geobr"
) # lista de pacotes utilizados
new.packages <-
list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])] # checar se h? algum pacote novo
if (length(new.packages))
install.packages(new.packages) # instala os pacotes novos
lapply(list.of.packages, require, character.only = TRUE) # carrega os pacotes necess?rios
sf_use_s2(FALSE) #TODO
setwd("G:\\My Drive\\R\\Hidroweb_Data_Process\\2022") #define a pasta de trabalho
list.of.packages <-
c(
"colorRamps",
"knitr",
"ggplot2",
"zoo",
"RColorBrewer",
"ggrepel",
"sf",
"rgeos",
"ggforce",
"scales",
"lubridate",
"tidyverse",
"timeDate",
"leaflet",
"ggpmisc",
"rvest",
"xml2",
"XML",
"padr",
"stringr",
"hydroTSM",
"randtests",
"Kendall",
"trend",
"lfstat",
"geobr"
) # lista de pacotes utilizados
new.packages <-
list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])] # checar se h? algum pacote novo
if (length(new.packages))
install.packages(new.packages) # instala os pacotes novos
lapply(list.of.packages, require, character.only = TRUE) # carrega os pacotes necess?rios
sf_use_s2(FALSE) #TODO
setwd("G:\\My Drive\\R\\Hidroweb_Data_Process\\2022") #define a pasta de trabalho
list.of.packages <-
c(
"colorRamps",
"knitr",
"ggplot2",
"zoo",
"RColorBrewer",
"ggrepel",
"sf",
"rgeos",
"ggforce",
"scales",
"lubridate",
"tidyverse",
"timeDate",
"leaflet",
"ggpmisc",
"rvest",
"xml2",
"XML",
"padr",
"stringr",
"hydroTSM",
"randtests",
"Kendall",
"trend",
"lfstat",
"geobr"
) # lista de pacotes utilizados
new.packages <-
list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])] # checar se h? algum pacote novo
if (length(new.packages))
install.packages(new.packages) # instala os pacotes novos
lapply(list.of.packages, require, character.only = TRUE) # carrega os pacotes necess?rios
sf_use_s2(FALSE) #TODO
setwd("G:\\My Drive\\R\\Hidroweb_Data_Process\\2022") #define a pasta de trabalho
knitr::opts_chunk$set(echo = TRUE)
gc(TRUE)
rm(list = ls())
dev.off()
cat("\014")
list.of.packages <-
c(
"colorRamps",
"knitr",
"ggplot2",
"zoo",
"RColorBrewer",
"ggrepel",
"sf",
"rgeos",
"ggforce",
"scales",
"lubridate",
"tidyverse",
"timeDate",
"leaflet",
"ggpmisc",
"rvest",
"xml2",
"XML",
"padr",
"stringr",
"hydroTSM",
"randtests",
"Kendall",
"trend",
"lfstat",
"geobr"
) # lista de pacotes utilizados
new.packages <-
list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])] # checar se h? algum pacote novo
if (length(new.packages))
install.packages(new.packages) # instala os pacotes novos
lapply(list.of.packages, require, character.only = TRUE) # carrega os pacotes necess?rios
sf_use_s2(FALSE) #TODO
setwd("G:\\My Drive\\R\\Hidroweb_Data_Process\\2022") #define a pasta de trabalho
knitr::opts_chunk$set(echo = TRUE)
gc(TRUE)
rm(list = ls())
dev.off()
knitr::include_graphics("G:\\My Drive\\R\\Hidroweb_Data_Process\\2022\\visualroteiro.png")
knitr::opts_chunk$set(echo = TRUE)
gc(TRUE)
rm(list = ls())
dev.off()
# Chunk 13
dfMean = flowStatistics(list = dadosFluSelect, statistics = "Qmean")
dfFillmean = fillGaps(lista = dfMean, minimumCor = 0.85, minimunObsPairs = 5)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
gc(TRUE)
rm(list = ls())
dev.off()
cat("\014")
# Chunk 2: packages
list.of.packages <-
c(
"colorRamps",
"knitr",
"magrittr",
"ggplot2",
"zoo",
"RColorBrewer",
"ggrepel",
"sf",
"rgeos",
"ggforce",
"scales",
"lubridate",
"tidyverse",
"purrr",
"timeDate",
"leaflet",
"ggpmisc",
"rvest",
"xml2",
"reshape2",
"XML",
"padr",
"stringr",
"hydroTSM",
"randtests",
"Kendall",
"trend",
"lfstat",
"geobr"
) # lista de pacotes utilizados
new.packages <-
list.of.packages[!(list.of.packages %in% installed.packages()[, "Package"])] # checar se h? algum pacote novo
if (length(new.packages))
install.packages(new.packages) # instala os pacotes novos
lapply(list.of.packages, require, character.only = TRUE) # carrega os pacotes necess?rios
sf_use_s2(FALSE) #TODO
source("G:/My Drive/R/Hidroweb_Data_Process/2022/Roteiro/00_funcoes_11_02_2021.R")
setwd("G:/My Drive/R/Hidroweb_Data_Process/2022") #define a pasta de trabalho
# Chunk 3: visual
knitr::include_graphics("G:/My Drive/R/Hidroweb_Data_Process/2022/visualroteiro.png")
# Chunk 4: areaestudo
areaEstudo = st_read("G:\\My Drive\\R\\Hidroweb_Data_Process\\2022\\piancopiranhas.shp") %>%
select(geometry)
areaEstudo = st_transform(areaEstudo, crs = "WGS84")
leaflet(data = areaEstudo) %>%
addTiles() %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
addPolygons( popup = ~as.character("Bacia Piancó-Piranhas-Açu"), label = ~as.character("Bacia Piancó-Piranhas-Açu"),group = "Bacia Piancó-Piranhas-Açu") %>%
addLayersControl(
overlayGroups = c("Bacia Piancó-Piranhas-Açu"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addMiniMap()
# Chunk 5: estados
estados = read_state(code_state = "all",
year = 2017,
simplified = TRUE,
showProgress = TRUE) %>%
st_transform(crs = "WGS84") %>%
st_intersection(areaEstudo) %>%
as_tibble() %>%
select(name_state) %>%
apply(2,toupper) %>%
as.vector()
head(estados)
# Chunk 6: iventario
invEstFlu = inventory(estados, stationType = "flu")
invEstFlu = invEstFlu %>%
st_as_sf(coords = c("long", "lat"), crs = "WGS84") %>%
st_intersection(areaEstudo)
head(invEstFlu)
# Chunk 7: maparea
leaflet(data = areaEstudo) %>%
addTiles() %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
addPolygons( popup = ~as.character("Bacia Piancó-Piranhas-Açu"), label = ~as.character("Bacia   Piancó-Piranhas-Açu"),group = "Bacia Piancó-Piranhas-Açu") %>%
addCircleMarkers(
data = invEstFlu,
label = ~ station_code,
fillColor = "red",
fillOpacity = 1,
stroke = TRUE,
weight = 3,
radius = 4,
color = "black",
group = "Estações Fluviométricas") %>%
addLayersControl(
overlayGroups = c("Bacia Piancó-Piranhas-Açu","Estações Fluviométricas"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addMiniMap()
# Chunk 8: stationsData
dadosFlu = stationsData(invEstFlu)
names(dadosFlu)
head(dadosFlu[[1]])
# Chunk 9: organize
dadosFluSerie = organize(dadosFlu)
dadosFluSerie[[1]]
# Chunk 10: mMonthlyPlot1
mMonthlyPlot(organizeResult = dadosFluSerie,
maxFailurePorcent = 5,
minimalYears = 10,
consistedOnly = TRUE)
# Chunk 11: mMonthlyPlot
mMonthlyPlot(organizeResult = dadosFluSerie,
maxFailurePorcent = 5,
minimalYears = 20,
consistedOnly = TRUE)
# Chunk 12: selectStations
dadosFluSelect = selectStations(dados = dadosFluSerie,
mode = "yearly",
maxFailurePorcent = 5,
minimalYears = 10,
month = "Jan",
inicialYear = NULL, #initial consertar
finalYear = 2021,
consistedOnly = FALSE)
# Chunk 13
dfMean = flowStatistics(list = dadosFluSelect, statistics = "Qmean")
dfFillmean = fillGaps(lista = dfMean, minimumCor = 0.85, minimunObsPairs = 5)
save.image("G:/My Drive/R/Hidroweb_Data_Process/2022/Roteiro/workspace_roteiro.RData")
head(dadosFlu[[1]])
View(head(dadosFlu[[1]]))
dadosFlu
names(dadosFluSerie)
invEstFlu
invEstFlu$station_code[1:2]
invEstFlu$station_code[]
invEstFlu$station_code[names(dadosFluSerie),]
invEstFlu$station_code[names(dadosFluSerie)]
invEstFlu$station_code[as.numeric(names(dadosFluSerie))]
invEstFlu$station_code[1:2]
class(invEstFlu$station_code[1:2])
class(names(dadosFluSerie))
invEstFlu[1]
invEstFlu[[1]]
invEstFlu[[2]]
invEstFlu[[2]][names(dadosFluSerie)]
invEstFlu[[2]] in names(dadosFluSerie)
invEstFlu[[2]] %in% names(dadosFluSerie)
invEstFlu[[2]][invEstFlu[[2]] %in% names(dadosFluSerie)]
invEstFlu[invEstFlu[[2]] %in% names(dadosFluSerie)]
invEstFlu[invEstFlu[[2]] %in% names(dadosFluSerie)]
invEstFlu[invEstFlu[[2]] %in% names(dadosFluSerie),]
leaflet(data = areaEstudo) %>%
addTiles() %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
addPolygons( popup = ~as.character("Bacia Piancó-Piranhas-Açu"), label = ~as.character("Bacia   Piancó-Piranhas-Açu"),group = "Bacia Piancó-Piranhas-Açu") %>%
addCircleMarkers(
data = invEstFlu[invEstFlu[[2]] %in% names(dadosFluSerie),],
label = ~ station_code,
fillColor = "red",
fillOpacity = 1,
stroke = TRUE,
weight = 3,
radius = 4,
color = "black",
group = "Estações Fluviométricas") %>%
addLayersControl(
overlayGroups = c("Bacia Piancó-Piranhas-Açu","Estações Fluviométricas"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addMiniMap()
dadosFlu = stationsData(invEstFlu)
# names(dadosFlu)
leaflet(data = areaEstudo) %>%
addTiles() %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
addPolygons( popup = ~as.character("Bacia Piancó-Piranhas-Açu"), label = ~as.character("Bacia   Piancó-Piranhas-Açu"),group = "Bacia Piancó-Piranhas-Açu") %>%
addCircleMarkers(
data = invEstFlu[invEstFlu[[2]] %in% names(dadosFluSerie),],
label = ~ station_code,
fillColor = "red",
fillOpacity = 1,
stroke = TRUE,
weight = 3,
radius = 4,
color = "black",
group = "Estações Fluviométricas") %>%
addLayersControl(
overlayGroups = c("Bacia Piancó-Piranhas-Açu","Estações Fluviométricas"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addMiniMap()
head(dadosFlu[[1]])
# View(head(dadosFlu[[1]]))
load("G:/My Drive/R/Hidroweb_Data_Process/2022/Roteiro/workspace_roteiro.RData")
head(dadosFlu[[1]])
View(head(dadosFlu[[1]]))
dadosFluSelect = selectStations(dados = dadosFluSerie,
mode = "yearly",
maxFailurePorcent = 5,
minimalYears = 10,
month = "Jan",
inicialYear = NULL, #initial consertar
finalYear = 2021,
consistedOnly = FALSE)
dadosFluSelect = selectStations(dados = dadosFluSerie,
mode = "yearly",
maxFailurePorcent = 1,
minimalYears = 2,
month = "Jan",
inicialYear = NULL, #initial consertar
finalYear = 2021,
consistedOnly = FALSE)
dadosFluSelect = selectStations(dados = dadosFluSerie,
mode = "yearly",
maxFailurePorcent = 10,
minimalYears = 15,
month = "Jan",
inicialYear = NULL, #initial consertar
finalYear = 2021,
consistedOnly = FALSE)
dadosFluSelect = selectStations(dados = dadosFluSerie,
mode = "yearly",
maxFailurePorcent = 5,
minimalYears = 10,
month = "Jan",
inicialYear = NULL, #initial consertar
finalYear = 2021,
consistedOnly = FALSE)
dfMean = flowStatistics(list = dadosFluSelect, statistics = "Qmean")
dfFillmean = fillGaps(lista = dfMean, minimumCor = 0.85, minimunObsPairs = 5)
dfMean = flowStatistics(list = dadosFluSelect, statistics = "Qmean")
dfFillmean = fillGaps(lista = dfMean, minimumCor = 0.75, minimunObsPairs = 4)
